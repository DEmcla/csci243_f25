version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: csci243_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-csci243_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-csci243_pass}
      POSTGRES_DB: ${POSTGRES_DB:-csci243_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-csci243_user} -d ${POSTGRES_DB:-csci243_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer - Simple web database interface
  adminer:
    image: adminer:4.8.1
    container_name: csci243_adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  # pgAdmin - Full-featured database management (AUTO-CONFIGURED!)
  pgadmin:
    image: dpage/pgadmin4:7.8
    container_name: csci243_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_DISABLE_SETTINGS_MODULE: 'True'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin_servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres

volumes:
  postgres_data:
    name: csci243_postgres_data
  pgadmin_data:
    name: csci243_pgadmin_data

networks:
  default:
    name: csci243_network